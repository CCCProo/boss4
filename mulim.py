@bot.on.message(text=["–ë–æ—Å—Å"])
async def button_handler(message: Message):
	from_id=message.from_id
	REGISTER(from_id)
	with open(f"boss/mulim.json", "r") as file:
		mulim_info = json.load(file)
	keyboard = Keyboard(inline=True)
	keyboard.add(Text("‚öî –ê—Ç–∞–∫–æ–≤–∞—Ç—å",payload={"cmd": "attack_mulim"}), color=KeyboardButtonColor.POSITIVE)
	keyboard.row()
	keyboard.add(Text("üìÑ –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —É—Ä–æ–Ω—É",payload={"cmd": "table_mulim"}), color=KeyboardButtonColor.POSITIVE)
	keyboard.row()
	keyboard.add(Text(f"üí∞ –ù–∞–≥—Ä–∞–¥—ã –ø–æ —É—Ä–æ–Ω—É", {"cmd": "yron_mulim"}),color=KeyboardButtonColor.NEGATIVE)
	if 1500000 >= mulim_info['XP']:
		xp = "{:,}".format(mulim_info['XP'])
	else:
		xp = "{:,}".format(1500000)
	await message.answer(f"""‚öî –ú–∏—Ä–æ–≤–æ–π –±–æ—Å—Å: –ú–∏–ª–∏–º –ù–∞–≤–∞:

‚ô• –ó–¥–æ—Ä–æ–≤—å–µ: {xp} ‚ô•
‚úä –£—Ä–æ–Ω: 140 üó°
üîÆ –ú–∞–≥.—É—Ä–æ–Ω: 50 - 60 üîÆ
üéØ –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å ¬´–ß—ë—Ä–Ω–∞—è –¥—ã—Ä–∞ —É–¥–∞—Ä–∞¬ª: –° —à–∞–Ω—Å–æ–º 5% –º–æ–∂–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å –≤–∞—à —É—Ä–æ–Ω –∏–ª–∏ –ú–∞–≥.—É—Ä–æ–Ω.
¬´–†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è¬ª: –° —à–∞–Ω—Å–æ–º 1% –º–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–∫–æ–µ —Ç–æ –∫–æ–ª–∏—á–µ—Ç—Å–≤–æ –∑–¥–æ—Ä–æ–≤—å—è
üïí –†–µ—Å–ø–∞—É–Ω: 12 —á–∞—Å–æ–≤

üèπ –í–∞—à–∏ —Ö–∞—Ä–∞—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: 1,664 ‚ô•, 438 üó°, 128 üîÆ

üéí –î—Ä–æ–ø—ã:
‚Äî üî∑ 5,250 üü°, +2000 ‚≠ê ~100%
‚Äî üî∑ +75 üõ¢ ~80%
‚Äî üî∑ –ú–∞–≥–∏—á–µ—Å–∫–∏–π —Å–ª–∏—Ç–æ–∫ (1 - 3 —à—Ç) ~55%
‚Äî üî∑ –ö—Ä–æ–≤—å (2 - 4 —à—Ç) ~30%
‚Äî üî∑ –≠—Å—Å–µ–Ω—Ü–∏—è –¥—É—à–∏ (3 —à—Ç) ~30%
‚Äî üî∑ –ó–≤–µ–∑–¥–Ω–∞—è –ø—ã–ª—å (2-3 —à—Ç) ~5%
‚Äî üî∑ –ß—ë—Ä–Ω–∞—è –¥—ã—Ä–∞ (1 —à—Ç) ~1%
""",keyboard=keyboard)

@bot.on.message(payload={"cmd": "table_mulim"})
async def button_handler(message: Message):
    from_id = message.from_id
    REGISTER(from_id)
    with open(f"boss/all_attack_mulim.json", "r") as file:
        all_attack = json.load(file)

    # —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º
    sorted_leaderboard = dict(sorted(all_attack.items(), key=lambda item: item[1], reverse=True))
    values_num = 0
    # –≤—ã–≤–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
    all_leader = ""
    with open(f"boss/prize_mulim.json", "r") as file:
        prize_mulim = json.load(file)
    for key, value in sorted_leaderboard.items():
        values_num += 1
        with open(f"my_info/{key}.json", "r") as file:
            my_info = json.load(file)
        with open(f"all_id.json", "r") as file:
            all_id = json.load(file)
        user = await bot.api.users.get(int(key))
        first_name = user[0].first_name

        gems = ""
        for prize_value, prize_gems in prize_mulim.items():
            if value >= int(prize_value):
                gems = f"| {prize_gems} üíé"
                if int(prize_value) <= 650000:
                    bonus_gems = int((value - int(prize_value)) * 0.0002)
                    if bonus_gems > 0:
                        gems += f"(+{bonus_gems}üíé)"
                break
        all_leader += f"{values_num}. @id{key}({first_name})[{my_info['–£—Ä–æ–≤–µ–Ω—å']}] ID: {all_id[str(key)]} ‚Äî {value} üó°{gems}\n"
    await message.answer(f"üìÑ –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —É—Ä–æ–Ω—É –Ω–∞ –ú–∏–ª–∏–º:\n\n{all_leader}")

@bot.on.message(payload={"cmd": "yron_mulim"})
async def button_handler(message: Message):
		from_id = message.from_id
		REGISTER(from_id)
		with open(f"boss/prize_mulim.json", "r") as file:
			prize_mulim = json.load(file)
		text = ""
		for a, b in prize_mulim.items():
			attack =  "{:,}".format(int(a))
			text += f"{attack} üó° ‚Äî {b} üíé\n"
		await message.answer(f"üí∞ –ù–∞–≥—Ä–∞–¥—ã –ø–æ —É—Ä–æ–Ω—É —É –ú–∏–ª–∏–º:\n\nüí∞ –ï—Å–ª–∏ –≤—ã –Ω–∞–±—Ä–∞–ª–∏ —É—Ä–æ–Ω–∞ –≤—ã—à–µ –º–∞–∫—Å–∏–º—É–º–∞, —Ç–æ –≤ —Ä–∞–∑–º–µ—Ä–µ 0.05% –±—É–¥–µ—Ç —Ä–∞—Å—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –¥–æ–ø.–Ω–∞–≥—Ä–∞–¥–∞ –æ—Ç –≤–∞—à–µ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–Ω–∞\n\n{text}")


@bot.on.message(payload={"cmd": "attack_mulim"})
async def button_handler(message: Message):
	from_id=message.from_id
	REGISTER(from_id)
	with open(f"boss/mulim.json", "r") as file:
		mulim_info = json.load(file)
	with open(f"boss/prize_mulim.json", "r") as file:
		prize = json.load(file)
	with open(f"boss/all_attack_mulim.json", "r") as file:
		all_attack = json.load(file)
	with open(f"my_info/{from_id}.json", "r") as file:
		my_info = json.load(file)
	my_xp = my_info['–ó–¥–æ—Ä–æ–≤—å–µ'] 
	now = int(time.time())
	xul = False
	times = mulim_info['time']
	Krit_True = False
	text_krit = ""
	krit_sh = random.randint(1, 100)
	if my_info["–ö—Ä–∏—Ç-—à–∞–Ω—Å"] >= krit_sh:
		Krit_True = True
	else:
		Krit_True = False
	krit_value = my_info["–ö—Ä–∏—Ç-—É—Ä–æ–Ω"].split(',')
	lower, upper = int(krit_value[0]), int(krit_value[1])
	krit_yron = random.randint(lower, upper)
	
	total_seconds = times - now
	hours = total_seconds // 3600 # —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
	minutes = (total_seconds % 3600) // 60  # —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç
	seconds = total_seconds % 60   # –æ—Å—Ç–∞—Ç–æ–∫ —Å–µ–∫—É–Ω–¥
	if now <= mulim_info['time']:
		await message.answer(f"‚ùå –ê—Ç–∞–∫–æ–≤–∞—Ç—å –ú–∏–ª–∏–º  –º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ {hours} —á–∞—Å. {minutes} –º–∏–Ω. {seconds} —Å–µ–∫.")
	else:
		if my_xp - 150 <= 0:
			xul = True
			await message.answer("‚ùå –í—ã –ø–æ–≥–∏–±–ª–∏. –û–∂–∏–¥–∞–π—Ç–µ, –∫–æ–≥–¥–∞ –≤—ã –≤—ã–ª–µ—á–∏—Ç–µ—Å—å")
		else:
			if Krit_True == True:
				my_attack = krit_yron
				text_krit = "‚ùó"
				dop_attack = krit_yron
			else:
				my_attack = my_info['–ê—Ç–∞–∫–∞'] + my_info['–ú–∞–≥-–£—Ä–æ–Ω']
			if mulim_info['XP'] - my_attack  <= 0:
				#–¥–æ–±–∞–≤–∏—à—å —Å–∞–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥ –µ—Å–ª–∏ —á—Ç–æ
				mulim_info['XP'] = 1500000
				mulim_info['time'] = now + 43200
								
				await message.answer(f"–ú–∏–ª–∏–º —É–±–∏—Ç–∞")
			else:
				black_hole = False
				xul = False
				Regen = False
				random_spop = round(random.uniform(1.0, 100.0), 2)	
				yvorot_rand = random.randint(1, 100)
				boss_xp = mulim_info['XP']
				yvorod_text = ""
				form_boss_xp = "{:,}".format(boss_xp - my_attack)
				keyboard = Keyboard(inline=True)
				keyboard.add(Text(f"‚öî –ê—Ç–∞–∫–æ–≤–∞—Ç—å ({form_boss_xp} ‚ô•)",payload={"cmd": "attack_mulim"}), color=KeyboardButtonColor.POSITIVE)
				keyboard.row()		
				
				if yvorot_rand <= my_info['–£–≤–æ—Ä–æ—Ç']:
					yvorod = True
				else:
					yvorod = False
				if yvorod == True:
					attack_mob = 0
					yvorod_text = "| üí´ –£–≤–æ—Ä–æ—Ç"
				else:
					attack_mob = random.randint(140, 150)
				keyboard.add(Callback(f"‚ô• –¢–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ ({my_xp - attack_mob} ‚ô•)",payload={"cmd": "MY_XP_NONE"}),color=KeyboardButtonColor.NEGATIVE),
				if random_spop <= 5:
					black_hole = True
					Regen = False
				if random_spop <= 1.5:
					black_hole = False
					Regen = True
				if black_hole == True:
					text_all = ""
					rand50_50 = random_spop = random.randint(1, 100)
					if rand50_50 <= 30:
						Yron = True
						text_all = f"–ú–∏–ª–∏–º –±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∞ –≤–∞—à—É –º–∞–≥.–∞—Ç–∞–∫—É {yvorod_text}"
						my_attack = my_info['–ê—Ç–∞–∫–∞'] + dop_attack
					else:
						Yron = False
						text_all = f"–ú–∏–ª–∏–º –±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∞ –≤–∞—à—É –∞—Ç–∞–∫—É {yvorod_text}"
						my_attack =  my_info['–ú–∞–≥-–£—Ä–æ–Ω']
					await message.answer(f"üéØ –ú–∏–ª–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å ¬´–ß—ë—Ä–Ω–∞—è –¥—ã—Ä–∞ —É–¥–∞—Ä–∞¬ª. {text_all}\n\nüéΩ –í—ã —É–¥–∞—Ä–∏–ª–∏ –ø–æ –ú–∏–ª–∏–º {my_attack} {text_krit}",keyboard=keyboard)
				elif Regen == True:
					if yvorod == True:
						yvorod_text = "| üí´ –£–≤–æ—Ä–æ—Ç"
					regent_rand = random.randint(900, 12000)	
					my_attack = 0
					form_boss_xp = "{:,}".format(boss_xp + regent_rand)
					keyboard = Keyboard(inline=True)
					keyboard.add(Text(f"‚öî –ê—Ç–∞–∫–æ–≤–∞—Ç—å ({form_boss_xp} ‚ô•)",payload={"cmd": "attack_mulim"}), color=KeyboardButtonColor.POSITIVE)
					keyboard.row()		
					keyboard.add(Callback(f"‚ô• –¢–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ ({my_xp - attack_mob} ‚ô•)",payload={"cmd": "MY_XP_NONE"}),color=KeyboardButtonColor.NEGATIVE),
					await message.answer(f"üéØ –ú–∏–ª–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å ¬´–†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è¬ª. –ú–∏–ª–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∞ {regent_rand} –∑–¥–æ—Ä–æ–≤—å—è ‚ù§ {yvorod_text}.",keyboard=keyboard)
				
					mulim_info['XP'] += regent_rand
					with open(f"boss/mulim.json", "w") as file:
						json.dump(mulim_info, file, ensure_ascii=False, indent=2)
				else:
					if yvorod == True:
						yvorod_text = "| üí´ –£–≤–æ—Ä–æ—Ç"
					await message.answer(f"ü¶π‚Äç‚ôÇ –ú–∏–ª–∏–º –Ω–∞–Ω–µ—Å–ª–∞ –≤–∞–º {attack_mob} üó° {yvorod_text}\n\nüéΩ –í—ã —É–¥–∞—Ä–∏–ª–∏ –ø–æ –ú–∏–ª–∏–º {my_attack} {text_krit} üó°",keyboard=keyboard)
				if str(from_id) in all_attack:
					all_attack[str(from_id)] +=  my_attack
				else:
					all_attack[str(from_id)] =  my_attack
				with open(f"boss/all_attack_mulim.json", "w") as file:
					json.dump(all_attack, file, ensure_ascii=False, indent=2)
				my_info['–ó–¥–æ—Ä–æ–≤—å–µ'] -= attack_mob
				mulim_info['XP'] -= my_attack
			my_info['–•–∏–ª'] = xul
			with open(f"boss/mulim.json", "w") as file:
				json.dump(mulim_info, file, ensure_ascii=False, indent=2)
				with open(f"my_info/{from_id}.json", "w") as file:
					json.dump(my_info, file, ensure_ascii=False, indent=2)
